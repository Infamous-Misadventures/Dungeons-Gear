buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven { url = 'https://dist.creeper.host/Sponge/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath(group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true) { exclude group: 'org.apache.logging.log4j' }
        classpath 'org.apache.logging.log4j:log4j-api:2.11.2'
        classpath 'org.apache.logging.log4j:log4j-core:2.11.2'
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

mixin {
    add sourceSets.main, "dungeons_gear.refmap.json"
}

version = "${mc_version}-${mod_version}"
group = 'com.infamous.dungeons_gear' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${modid}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel:"official", version:"${mc_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=dungeons_gear.mixins.json"

            mods {
                dungeons_gear {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=dungeons_gear.mixins.json"

            mods {
                dungeons_gear {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'dungeons_gear', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                dungeons_gear {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven {
        url "https://www.cursemaven.com"
    }
    maven { url = "https://maven.theillusivec4.top/"}
    flatDir {
        dirs 'mods'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'

    //Library
    implementation fg.deobf("dungeons_libraries:dungeons_libraries:1.18.2-2.0.3-beta")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")
    //runtimeOnly fg.deobf("curse.maven:neat-238372:3182258")
    runtimeOnly fg.deobf("curse.maven:spark-361579:3824951")
//    runtimeOnly fg.deobf("curse.maven:epicfight-405076:3888643")
    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-1.18:${geckolib_version}")

    //compat tests
//    runtimeOnly fg.deobf("curse.maven:cofhcore-69162:3407019")
//    runtimeOnly fg.deobf("curse.maven:abnormalscore-382216:3457851")
//    runtimeOnly fg.deobf("curse.maven:Environmental-388992:3561534")
//    runtimeOnly fg.deobf("curse.maven:thermalfoundation-222880:3412300")

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "Dungeons Gear",
                "Specification-Vendor": "Infamous Mods",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"Infamous Mods",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "dungeons_gear.mixins.json"
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}